[{"C:\\Users\\Wayne\\REACT\\fish-finders-v1\\src\\index.js":"1","C:\\Users\\Wayne\\REACT\\fish-finders-v1\\src\\App.js":"2","C:\\Users\\Wayne\\REACT\\fish-finders-v1\\src\\reportWebVitals.js":"3","C:\\Users\\Wayne\\REACT\\fish-finders-v1\\src\\components\\MapView.js":"4","C:\\Users\\Wayne\\REACT\\fish-finders-v1\\src\\components\\MapViewer.js":"5","C:\\Users\\Wayne\\REACT\\fish-finders-v1\\src\\components\\StationsPopup.js":"6","C:\\Users\\Wayne\\REACT\\fish-finders-v1\\src\\useRequestNwsStations_Swr.js":"7","C:\\Users\\Wayne\\REACT\\fish-finders-v1\\src\\api\\NWSStations.js":"8","C:\\Users\\Wayne\\REACT\\fish-finders-v1\\src\\api\\NwsStations.js":"9","C:\\Users\\Wayne\\REACT\\fish-finders-v1\\src\\api\\NwsStationsAsync.js":"10","C:\\Users\\Wayne\\REACT\\fish-finders-v1\\src\\components\\MapViewerClass.js":"11","C:\\Users\\Wayne\\REACT\\fish-finders-v1\\src\\useRequestNwsStations.js":"12","C:\\Users\\Wayne\\REACT\\fish-finders-v1\\src\\useRequestNwsPoints_Swr.js":"13"},{"size":508,"mtime":1611327115569,"results":"14","hashOfConfig":"15"},{"size":465,"mtime":1611328731285,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":5944,"mtime":1611346460078,"results":"18","hashOfConfig":"15"},{"size":6578,"mtime":1611669188314,"results":"19","hashOfConfig":"15"},{"size":1396,"mtime":1611156504707,"results":"20","hashOfConfig":"15"},{"size":2157,"mtime":1611351352088,"results":"21","hashOfConfig":"15"},{"size":667,"mtime":1611165763534,"results":"22","hashOfConfig":"15"},{"size":945,"mtime":1611325568295,"results":"23","hashOfConfig":"15"},{"size":961,"mtime":1611322890879,"results":"24","hashOfConfig":"15"},{"size":1927,"mtime":1611327445582,"results":"25","hashOfConfig":"15"},{"size":609,"mtime":1611582359830,"results":"26","hashOfConfig":"15"},{"size":1414,"mtime":1611351723033,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1ehnz9x",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"30"},"C:\\Users\\Wayne\\REACT\\fish-finders-v1\\src\\index.js",[],["63","64"],"C:\\Users\\Wayne\\REACT\\fish-finders-v1\\src\\App.js",["65","66"],"\nimport './App.css';\n\nimport MapView from \"./components/MapView\";\nimport MapViewer from \"./components/MapViewer\";\nimport MapViewerClass from \"./components/MapViewerClass\";\n\n//console.log(\"MAPBOX_ACCESS_TOKEN: \" + process.env.REACT_APP_MAPBOX_ACCESS_TOKEN);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      { /* <MapView></MapView>*/ }\n      <MapViewer></MapViewer>\n      { /* <MapViewerClass></MapViewerClass>*/ }\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Wayne\\REACT\\fish-finders-v1\\src\\reportWebVitals.js",[],"C:\\Users\\Wayne\\REACT\\fish-finders-v1\\src\\components\\MapView.js",["67","68","69","70","71","72","73","74","75","76","77"],"import ReactDOM from \"react-dom\";\r\nimport React, { useRef, useEffect } from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\n\r\nimport { useRequestNwsStations_Swr } from '../useRequestNwsStations_Swr'\r\nimport { useRequestNwsStations } from '../useRequestNwsStations'\r\nimport NwsStations from '../api/NwsStations'\r\nimport { NwsStationsAsync } from '../api/NwsStationsAsync'\r\n\r\nimport StationsPopup from \"./../components/StationsPopup\";\r\n\r\n//mapboxgl.accessToken = env.REACT_APP_MAPBOX_ACCESS_TOKEN;\r\nmapboxgl.accessToken = 'pk.eyJ1Ijoid2NvbmZvcnRpIiwiYSI6ImNrajkyNnk3MjQ4YmEycnFqYm01cWVqamYifQ.P6dAko2hqzbdSnDOZq9IpA'\r\nconsole.log(\"MAPBOX_ACCESS_TOKEN: \" + process.env.REACT_APP_MAPBOX_ACCESS_TOKEN);\r\n\r\nconst _gridId = \"BOX\"\r\nconst _gridX = 59\r\nconst _gridY = 28\r\n\r\nconst _nws_Lat = 41.377894\r\nconst _nws_Lon = 71.635437\r\nconst _nws_Rad = 100\r\n\r\nconst _mBox_Lat = 41.377894\r\nconst _mBox_Lon = -71.635437\r\n\r\nconst MapView = () => {\r\n  const mapContainerRef = useRef(null);\r\n  const popUpRef = useRef(new mapboxgl.Popup({ offset: 15 }))\r\n\r\n  console.log(\"const ==> MapView\");\r\n\r\n  // Get all of the Required API Data here.\r\n  // NWS Stations\r\n  //const { data: resultsNWS, error: errorNWS } = useRequestNwsStations_Swr(_mBox_Lat, _mBox_Lon);\r\n  //console.log(\"useRequestNwsStations_Swr (MapView) ==> Results\");\r\n  //console.log(resultsNWS);\r\n\r\n  const { data: resultsNWS_Alt, error: errorNWS_Alt } = useRequestNwsStations(_gridId, _gridX, _gridY )\r\n  //console.log(\"useRequestNwsStations (MapView) ==> Results\");\r\n  //console.log(\"Errors ==>\" + errorNWS_Alt);\r\n  //console.log(resultsNWS_Alt);\r\n\r\n\r\n  // NOAA Weather Buoys (rss)\r\n\r\n  // Try Axios here!!!\r\n  //const resultsNWS_Axios = NwsStations(_gridId, _gridX, _gridY);\r\n  //console.log(\"NwsStations ==> Axios (MapView) ==> Results\");\r\n  //console.log(resultsNWS_Axios);\r\n\r\n  //const resultsNWS_Axios_Async = await NwsStationsAsync(_gridId, _gridX, _gridY);\r\n  //console.log(\"NwsStationsAsync ==> Axios (MapView) ==> Results\");\r\n  //console.log(resultsNWS_Axios_Async);\r\n\r\n  // initialize map when component mounts\r\n  useEffect(() => {\r\n    const map = new mapboxgl.Map({\r\n      container: mapContainerRef.current,\r\n      // See style options here: https://docs.mapbox.com/api/maps/#styles\r\n      style: 'mapbox://styles/mapbox/outdoors-v11',\r\n      center: [-71.635437, 41.377894],\r\n      zoom: 8,\r\n    });\r\n\r\n    // add navigation control (the +/- zoom buttons)\r\n    map.addControl(new mapboxgl.NavigationControl(), 'bottom-right');\r\n\r\n    map.on(\"load\", () => {\r\n      // add the data source for new a feature collection with no features0\r\n\r\n      //const resultsNWSAsync = await getNwsStationsDataAsync(_gridId, _gridX, _gridY);\r\n      //const { data: resultsNWS, error: errorNWS } = useRequestNwsStations_Swr(_gridId, _gridX, _gridY )\r\n      //const resultsNWSStations = NwsStations(_gridId, _gridX, _gridY);\r\n      //console.log(resultsNWSAsync);\r\n\r\n      console.log(\"map.on('load')\");\r\n\r\n      map.addSource(\"nws-station-data\", {\r\n        type: \"geojson\",\r\n        data: resultsNWS_Alt\r\n        //data: resultsNWS_Axios\r\n        //data: 'https://api.weather.gov/gridpoints/BOX/59,28/stations'\r\n        //data: 'https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_10m_ports.geojson'\r\n        //data: {\r\n        //  type: \"FeatureCollection\",\r\n        //  features: []\r\n        //}\r\n      });\r\n\r\n      // now add the layer, and reference the data source above by name\r\n      map.addLayer({\r\n        id: \"nws-station-layer\",\r\n        source: \"nws-station-data\",\r\n        type: \"symbol\",\r\n        layout: {\r\n          // full list of icons here: https://labs.mapbox.com/maki-icons\r\n          \"icon-image\": \"castle-15\", // this icons on our map\r\n          \"icon-padding\": 0,\r\n          \"icon-allow-overlap\": true\r\n        }\r\n      });\r\n\r\n    });\r\n\r\n    map.on(\"move\", () => {\r\n      // get new center coordinates\r\n      const { lng, lat } = map.getCenter();\r\n\r\n      //var { data: resultsNWS, error: errorNWS } = useRequestNwsStations(_gridId, _gridX, _gridY )\r\n\r\n      // fetch new data\r\n      //const results = await fetchFakeData({ longitude: lng, latitude: lat });\r\n      //const results = await FetchNWSData({ longitude: lng, latitude: lat });\r\n      // update \"random-points-data\" source with new data\r\n      // all layers that consume the \"random-points-data\" data source will be updated automatically\r\n      //console.log(results);\r\n\r\n      //map.getSource(\"nws-station-data\").setData(resultsNWS);\r\n\r\n      //const url = \"https://api.weather.gov/gridpoints/BOX/59,28/stations\";\r\n      //const { data, error } = useSwr(url, { fetcher });\r\n      //const stations = data && !error ? data.slice(0, 2000) : [];\r\n  \r\n      //console.log(data);\r\n\r\n\r\n    });\r\n\r\n\r\n    // change cursor to pointer when user hovers over a clickable feature\r\n    map.on(\"mouseenter\", \"nws-station-layer\", e => {\r\n      if (e.features.length) {\r\n        map.getCanvas().style.cursor = \"pointer\";\r\n      }\r\n    });\r\n\r\n    // reset cursor to default when user is no longer hovering over a clickable feature\r\n    map.on(\"mouseleave\", \"nws-station-layer\", () => {\r\n      map.getCanvas().style.cursor = \"\";\r\n    });\r\n\r\n    // add popup when user clicks a point\r\n    map.on(\"click\", \"nws-station-layer\", e => {\r\n      if (e.features.length) {\r\n        console.log('features => ' + e.features.length);\r\n        const feature = e.features[0];\r\n        // create popup node\r\n        const popupNode = document.createElement(\"div\");\r\n        ReactDOM.render(<StationsPopup feature={feature} />, popupNode);\r\n        // set popup on map\r\n        popUpRef.current\r\n          .setLngLat(feature.geometry.coordinates)\r\n          .setDOMContent(popupNode)\r\n          .addTo(map);\r\n      }\r\n    });\r\n\r\n    // clean up on unmount\r\n    return () => map.remove();\r\n\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return <div className=\"map-container\" ref={mapContainerRef} />;\r\n};\r\n\r\nexport default MapView;","C:\\Users\\Wayne\\REACT\\fish-finders-v1\\src\\components\\MapViewer.js",["78","79","80","81","82","83","84","85","86"],"C:\\Users\\Wayne\\REACT\\fish-finders-v1\\src\\components\\StationsPopup.js",["87","88","89","90","91"],"import React from \"react\";\r\nimport useSwr, { SWRConfig } from \"swr\";\r\n\r\nconst fetcher = (...args) => fetch(...args).then(response => response.json());\r\n\r\nconst StationsPopup = ({ feature }) => {\r\n  const { id, name, stationIdentifier } = feature.properties;\r\n\r\n  const url = `https://api.weather.gov//stations/${stationIdentifier}/observations/latest`;\r\n  const { data, error } = useSwr(url, { fetcher });\r\n  //const stations = data && !error ? data.slice(0, 2000) : [];\r\n\r\n  console.log(url);\r\n  console.log(data);\r\n  console.log(error);\r\n  \r\n  if (data != null) {\r\n\r\n    var textDescription = data.properties.textDescription;\r\n    var temperature = data.properties.temperature.value;\r\n    var windSpeed = data.properties.windSpeed.value;\r\n    var windGust = data.properties.windGust.value;\r\n\r\n    return (\r\n      <div id={`popup-${id}`}>\r\n        <h3>{name}</h3>\r\n        <p>Conditions: {data.properties.textDescription}</p>\r\n        <p>Temp: {data.properties.temperature.value}C</p>\r\n        <p>Wind: {data.properties.windSpeed.value} km/h</p>\r\n        <p>Gusts: {data.properties.windGust.value} km/h</p>\r\n      </div>\r\n    );\r\n  }\r\n  else if (error) {\r\n    return (\r\n      <div id={`error`}>\r\n        <h3>{error}</h3>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div id={`error`}>\r\n        <p>NWS Data Fetch Error</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default StationsPopup;","C:\\Users\\Wayne\\REACT\\fish-finders-v1\\src\\useRequestNwsStations_Swr.js",["92","93","94","95"],"// React Custom Hook \r\n// A custom hook is a JavaScript function with a unique naming convention that requires the function name to start with \r\n// 'use' and has the ability to call other hooks.\r\n\r\nimport useSwr from 'swr'\r\nimport { useRequestNwsPoints_Swr } from './useRequestNwsPoints_Swr'\r\n\r\nconst fetcher = (...args) => fetch(...args).then(response => response.json());\r\n\r\nexport const useRequestNwsStations_Swr = (_mboxLat, _mboxLng) => {\r\n\r\n    // Get gridId, gridX and gridY from the mBox_Lat & _mBox_Lon parameters\r\n    const { data: pointsData, error: pointsErrors } = useRequestNwsPoints_Swr(_mboxLat, _mboxLng);\r\n\r\n    var _gridId = -'';\r\n    var _gridX = -1;\r\n    var _gridY = -1;\r\n\r\n    if (pointsData != null) {\r\n  \r\n      var _gridId = pointsData.properties.gridId;\r\n      var _gridX = pointsData.properties.gridX;\r\n      var _gridY = pointsData.properties.gridY;\r\n    }\r\n\r\n    console.log(\"_gridId:= \" + _gridId);\r\n    console.log(\"_gridX:= \" + _gridX);\r\n    console.log(\"_gridY:= \" + _gridY);\r\n\r\n\r\n    const urlStations = `https://api.weather.gov/gridpoints/${_gridId}/${_gridX},${_gridY}/stations`;\r\n    console.log(urlStations);\r\n\r\n    const { data: stationsData, error: stationsError } = useSwr(urlStations, { fetcher });\r\n    //const stations = data && !error ? data.slice(0, 2000) : [];\r\n\r\n    //const url = name ? baseUrl + path + '/' + name : baseUrl + path\r\n    //const { data, error } = useSwr(url)\r\n\r\n    console.log(\"stationsData:= \" + stationsData);\r\n    console.log(\"useRequestNwsStations_Swr\");\r\n\r\n    return { stationsData, stationsError }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//import useSwr from 'swr'\r\n//\r\n//const fetcher = (...args) => fetch(...args).then(response => response.json());\r\n//\r\n//export const useRequestNwsStations_Swr  = (gridId, gridX, gridY) => {\r\n//\r\n//    const url = `https://api.weather.gov/gridpoints/${gridId}/${gridX},${gridY}/stations`;\r\n//    const { data, error } = useSwr(url, { fetcher });\r\n//    //const stations = data && !error ? data.slice(0, 2000) : [];\r\n\r\n//    //const url = name ? baseUrl + path + '/' + name : baseUrl + path\r\n//    //const { data, error } = useSwr(url)\r\n//\r\n//   return { data, error }\r\n//}","C:\\Users\\Wayne\\REACT\\fish-finders-v1\\src\\api\\NWSStations.js",["96"],"C:\\Users\\Wayne\\REACT\\fish-finders-v1\\src\\api\\NwsStations.js",["97","98","99","100","101","102"],"import React, {Component, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst _gridId = \"BOX\"\r\nconst _gridX = 59\r\nconst _gridY = 28\r\n\r\n// Hopefully, this function will return a geo\r\nexport function NwsStations (gridId, gridX, gridY) {\r\n\r\n    const [ NwsStationsState, setNwsStationsState ] = useState({\r\n        loading: false,\r\n        repos: null,\r\n      });\r\n\r\n    const apiUrl = `https://api.weather.gov/gridpoints/${gridId}/${gridX},${gridY}/stations`;\r\n\r\n    useEffect(() => {\r\n        setNwsStationsState.loading = true;\r\n            axios.get(apiUrl).then((repos) => {\r\n              const allRepos = repos.data;\r\n              setNwsStationsState({ loading: false, repos: allRepos }\r\n            );\r\n        });\r\n    }, [setNwsStationsState]);\r\n\r\n    //console.log(\"NwsStations ==> Axios\");\r\n    //console.log( NwsStationsState.repos );\r\n    return NwsStationsState.repos;\r\n        \r\n};\r\nexport default NwsStations;","C:\\Users\\Wayne\\REACT\\fish-finders-v1\\src\\api\\NwsStationsAsync.js",["103","104","105","106","107","108"],"import React, {Component, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst _gridId = \"BOX\"\r\nconst _gridX = 59\r\nconst _gridY = 28\r\n\r\n// Hopefully, this function will return a geo\r\nexport async function NwsStationsAsync (gridId, gridX, gridY) {\r\n\r\n    const [ NwsStationsState, setNwsStationsState ] = useState({\r\n        loading: false,\r\n        repos: null,\r\n      });\r\n\r\n    const apiUrl = `https://api.weather.gov/gridpoints/${gridId}/${gridX},${gridY}/stations`;\r\n\r\n    useEffect(() => {\r\n        setNwsStationsState.loading = true;\r\n            axios.get(apiUrl).then((repos) => {\r\n              const allRepos = repos.data;\r\n              setNwsStationsState({ loading: false, repos: allRepos }\r\n            );\r\n        });\r\n    }, [setNwsStationsState]);\r\n\r\n    console.log(\"NwsStationsAsync ==> Axios\");\r\n    console.log( NwsStationsState.repos )\r\n    return NwsStationsState.repos;\r\n        \r\n};\r\nexport default NwsStationsAsync;","C:\\Users\\Wayne\\REACT\\fish-finders-v1\\src\\components\\MapViewerClass.js",["109","110","111","112","113","114","115"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport mapboxgl from 'mapbox-gl';\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1Ijoid2NvbmZvcnRpIiwiYSI6ImNrajkyNnk3MjQ4YmEycnFqYm01cWVqamYifQ.P6dAko2hqzbdSnDOZq9IpA'\r\n//console.log(\"MAPBOX_ACCESS_TOKEN: \" + process.env.REACT_APP_MAPBOX_ACCESS_TOKEN);\r\n\r\nconst _gridId = \"BOX\"\r\nconst _gridX = 59\r\nconst _gridY = 28\r\n\r\nconst _nws_Lat = 41.377894\r\nconst _nws_Lng = 71.635437\r\nconst _nws_Rad = 10\r\n\r\nconst _mBox_Lat = 41.377894\r\nconst _mBox_Lng = -71.635437\r\nconst _mBox_Zoom = 8\r\n\r\nclass MapViewerClass extends React.Component {\r\n    // Code from the next few steps will go here\r\n\r\n    // Store the intial Mapbox setings in the 'state'\r\n    // These values will change as the user interacts with the map\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lng: _mBox_Lng,\r\n            lat: _mBox_Lat,\r\n            zoom: _mBox_Zoom\r\n        };\r\n    }\r\n\r\n\r\n    // Initialing the Map here ensures that Mapbox GL JS will not try to render \r\n    // a map before React creates the element that contains the map.\r\n    componentDidMount() {\r\n        const map = new mapboxgl.Map({\r\n            container: this.mapContainer,\r\n            style: 'mapbox://styles/mapbox/outdoors-v11',\r\n            center: [this.state.lng, this.state.lat],\r\n            zoom: this.state.zoom\r\n        });\r\n\r\n        map.on('move', () => {\r\n            this.setState({\r\n                lng: map.getCenter().lng.toFixed(4),\r\n                lat: map.getCenter().lat.toFixed(4),\r\n                zoom: map.getZoom().toFixed(2)\r\n            });\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div ref={el => this.mapContainer = el} className=\"mapContainer\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default MapViewerClass;\r\n     \r\n//ReactDOM.render(<MapViewerClass />, document.getElementById('map'));","C:\\Users\\Wayne\\REACT\\fish-finders-v1\\src\\useRequestNwsStations.js",[],"C:\\Users\\Wayne\\REACT\\fish-finders-v1\\src\\useRequestNwsPoints_Swr.js",["116","117","118","119"],"import useSwr from 'swr'\r\n\r\nexport const useRequestNwsPoints_Swr = (_mboxLat, _mboxLng) => {\r\n\r\n    const fetcher = (...args) => fetch(...args).then(response => response.json());\r\n\r\n    console.log(\"useRequestNwsPoints_Swr ==> _mboxLat ==> \" + _mboxLat);\r\n    console.log(\"useRequestNwsPoints_Swr ==> _mboxLng ==> \" + _mboxLng);\r\n\r\n    const urlPoints = `https://api.weather.gov/points/${_mboxLat},${_mboxLng}`;\r\n    const { data: pointsData, error: pointsError } = useSwr(urlPoints, { fetcher });\r\n\r\n    //console.log(urlPoints);\r\n    //console.log(pointsData);\r\n    //console.log(pointsError);\r\n\r\n    var _gridId = \"\";\r\n    var _gridX = -1;\r\n    var _gridY = -1;\r\n\r\n    if (pointsData != null) {\r\n  \r\n      var _gridId = pointsData.properties.gridId;\r\n      var _gridX = pointsData.properties.gridX;\r\n      var _gridY = pointsData.properties.gridY;\r\n    }\r\n\r\n    console.log(\"useRequestNwsPoints_Swr ==> _gridId:= \" + _gridId);\r\n    console.log(\"useRequestNwsPoints_Swr ==> _gridX:= \" + _gridX);\r\n    console.log(\"useRequestNwsPoints_Swr ==> _gridY:= \" + _gridY);\r\n\r\n    return { _gridId, _gridX, _gridY };\r\n\r\n    //const stations = data && !error ? data.slice(0, 2000) : [];\r\n\r\n    //const url = name ? baseUrl + path + '/' + name : baseUrl + path\r\n    //const { data, error } = useSwr(url)\r\n\r\n    //console.log(\"useRequestNwsPoints_Swr\");\r\n    //console.log(data);\r\n\r\n   //return { pointsData, pointsError }\r\n}",{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":15},{"ruleId":"124","severity":1,"message":"128","line":6,"column":8,"nodeType":"126","messageId":"127","endLine":6,"endColumn":22},{"ruleId":"124","severity":1,"message":"129","line":5,"column":10,"nodeType":"126","messageId":"127","endLine":5,"endColumn":35},{"ruleId":"124","severity":1,"message":"130","line":7,"column":8,"nodeType":"126","messageId":"127","endLine":7,"endColumn":19},{"ruleId":"124","severity":1,"message":"131","line":8,"column":10,"nodeType":"126","messageId":"127","endLine":8,"endColumn":26},{"ruleId":"124","severity":1,"message":"132","line":20,"column":7,"nodeType":"126","messageId":"127","endLine":20,"endColumn":15},{"ruleId":"124","severity":1,"message":"133","line":21,"column":7,"nodeType":"126","messageId":"127","endLine":21,"endColumn":15},{"ruleId":"124","severity":1,"message":"134","line":22,"column":7,"nodeType":"126","messageId":"127","endLine":22,"endColumn":15},{"ruleId":"124","severity":1,"message":"135","line":24,"column":7,"nodeType":"126","messageId":"127","endLine":24,"endColumn":16},{"ruleId":"124","severity":1,"message":"136","line":25,"column":7,"nodeType":"126","messageId":"127","endLine":25,"endColumn":16},{"ruleId":"124","severity":1,"message":"137","line":39,"column":40,"nodeType":"126","messageId":"127","endLine":39,"endColumn":52},{"ruleId":"124","severity":1,"message":"138","line":108,"column":15,"nodeType":"126","messageId":"127","endLine":108,"endColumn":18},{"ruleId":"124","severity":1,"message":"139","line":108,"column":20,"nodeType":"126","messageId":"127","endLine":108,"endColumn":23},{"ruleId":"124","severity":1,"message":"140","line":5,"column":8,"nodeType":"126","messageId":"127","endLine":5,"endColumn":13},{"ruleId":"124","severity":1,"message":"129","line":7,"column":10,"nodeType":"126","messageId":"127","endLine":7,"endColumn":35},{"ruleId":"124","severity":1,"message":"141","line":8,"column":10,"nodeType":"126","messageId":"127","endLine":8,"endColumn":33},{"ruleId":"124","severity":1,"message":"142","line":9,"column":10,"nodeType":"126","messageId":"127","endLine":9,"endColumn":31},{"ruleId":"124","severity":1,"message":"130","line":10,"column":8,"nodeType":"126","messageId":"127","endLine":10,"endColumn":19},{"ruleId":"124","severity":1,"message":"131","line":11,"column":8,"nodeType":"126","messageId":"127","endLine":11,"endColumn":24},{"ruleId":"124","severity":1,"message":"143","line":15,"column":7,"nodeType":"126","messageId":"127","endLine":15,"endColumn":14},{"ruleId":"124","severity":1,"message":"144","line":16,"column":7,"nodeType":"126","messageId":"127","endLine":16,"endColumn":13},{"ruleId":"124","severity":1,"message":"145","line":17,"column":7,"nodeType":"126","messageId":"127","endLine":17,"endColumn":13},{"ruleId":"124","severity":1,"message":"146","line":2,"column":18,"nodeType":"126","messageId":"127","endLine":2,"endColumn":27},{"ruleId":"124","severity":1,"message":"147","line":21,"column":9,"nodeType":"126","messageId":"127","endLine":21,"endColumn":24},{"ruleId":"124","severity":1,"message":"148","line":22,"column":9,"nodeType":"126","messageId":"127","endLine":22,"endColumn":20},{"ruleId":"124","severity":1,"message":"149","line":23,"column":9,"nodeType":"126","messageId":"127","endLine":23,"endColumn":18},{"ruleId":"124","severity":1,"message":"150","line":24,"column":9,"nodeType":"126","messageId":"127","endLine":24,"endColumn":17},{"ruleId":"124","severity":1,"message":"151","line":13,"column":38,"nodeType":"126","messageId":"127","endLine":13,"endColumn":50},{"ruleId":"152","severity":1,"message":"153","line":21,"column":11,"nodeType":"126","messageId":"154","endLine":21,"endColumn":18},{"ruleId":"152","severity":1,"message":"155","line":22,"column":11,"nodeType":"126","messageId":"154","endLine":22,"endColumn":17},{"ruleId":"152","severity":1,"message":"156","line":23,"column":11,"nodeType":"126","messageId":"154","endLine":23,"endColumn":17},{"ruleId":"124","severity":1,"message":"157","line":1,"column":8,"nodeType":"126","messageId":"127","endLine":1,"endColumn":13},{"ruleId":"124","severity":1,"message":"157","line":1,"column":8,"nodeType":"126","messageId":"127","endLine":1,"endColumn":13},{"ruleId":"124","severity":1,"message":"158","line":1,"column":16,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"143","line":4,"column":7,"nodeType":"126","messageId":"127","endLine":4,"endColumn":14},{"ruleId":"124","severity":1,"message":"144","line":5,"column":7,"nodeType":"126","messageId":"127","endLine":5,"endColumn":13},{"ruleId":"124","severity":1,"message":"145","line":6,"column":7,"nodeType":"126","messageId":"127","endLine":6,"endColumn":13},{"ruleId":"159","severity":1,"message":"160","line":25,"column":8,"nodeType":"161","endLine":25,"endColumn":29,"suggestions":"162"},{"ruleId":"124","severity":1,"message":"157","line":1,"column":8,"nodeType":"126","messageId":"127","endLine":1,"endColumn":13},{"ruleId":"124","severity":1,"message":"158","line":1,"column":16,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"143","line":4,"column":7,"nodeType":"126","messageId":"127","endLine":4,"endColumn":14},{"ruleId":"124","severity":1,"message":"144","line":5,"column":7,"nodeType":"126","messageId":"127","endLine":5,"endColumn":13},{"ruleId":"124","severity":1,"message":"145","line":6,"column":7,"nodeType":"126","messageId":"127","endLine":6,"endColumn":13},{"ruleId":"159","severity":1,"message":"160","line":25,"column":8,"nodeType":"161","endLine":25,"endColumn":29,"suggestions":"163"},{"ruleId":"124","severity":1,"message":"164","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":16},{"ruleId":"124","severity":1,"message":"143","line":8,"column":7,"nodeType":"126","messageId":"127","endLine":8,"endColumn":14},{"ruleId":"124","severity":1,"message":"144","line":9,"column":7,"nodeType":"126","messageId":"127","endLine":9,"endColumn":13},{"ruleId":"124","severity":1,"message":"145","line":10,"column":7,"nodeType":"126","messageId":"127","endLine":10,"endColumn":13},{"ruleId":"124","severity":1,"message":"132","line":12,"column":7,"nodeType":"126","messageId":"127","endLine":12,"endColumn":15},{"ruleId":"124","severity":1,"message":"165","line":13,"column":7,"nodeType":"126","messageId":"127","endLine":13,"endColumn":15},{"ruleId":"124","severity":1,"message":"134","line":14,"column":7,"nodeType":"126","messageId":"127","endLine":14,"endColumn":15},{"ruleId":"124","severity":1,"message":"166","line":11,"column":38,"nodeType":"126","messageId":"127","endLine":11,"endColumn":49},{"ruleId":"152","severity":1,"message":"153","line":23,"column":11,"nodeType":"126","messageId":"154","endLine":23,"endColumn":18},{"ruleId":"152","severity":1,"message":"155","line":24,"column":11,"nodeType":"126","messageId":"154","endLine":24,"endColumn":17},{"ruleId":"152","severity":1,"message":"156","line":25,"column":11,"nodeType":"126","messageId":"154","endLine":25,"endColumn":17},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'MapView' is defined but never used.","Identifier","unusedVar","'MapViewerClass' is defined but never used.","'useRequestNwsStations_Swr' is defined but never used.","'NwsStations' is defined but never used.","'NwsStationsAsync' is defined but never used.","'_nws_Lat' is assigned a value but never used.","'_nws_Lon' is assigned a value but never used.","'_nws_Rad' is assigned a value but never used.","'_mBox_Lat' is assigned a value but never used.","'_mBox_Lon' is assigned a value but never used.","'errorNWS_Alt' is assigned a value but never used.","'lng' is assigned a value but never used.","'lat' is assigned a value but never used.","'axios' is defined but never used.","'useRequestNwsPoints_Swr' is defined but never used.","'useRequestNwsStations' is defined but never used.","'_gridId' is assigned a value but never used.","'_gridX' is assigned a value but never used.","'_gridY' is assigned a value but never used.","'SWRConfig' is defined but never used.","'textDescription' is assigned a value but never used.","'temperature' is assigned a value but never used.","'windSpeed' is assigned a value but never used.","'windGust' is assigned a value but never used.","'pointsErrors' is assigned a value but never used.","no-redeclare","'_gridId' is already defined.","redeclared","'_gridX' is already defined.","'_gridY' is already defined.","'React' is defined but never used.","'Component' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'apiUrl'. Either include it or remove the dependency array.","ArrayExpression",["169"],["170"],"'ReactDOM' is defined but never used.","'_nws_Lng' is assigned a value but never used.","'pointsError' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},{"desc":"171","fix":"173"},"Update the dependencies array to be: [apiUrl, setNwsStationsState]",{"range":"174","text":"175"},{"range":"176","text":"175"},[750,771],"[apiUrl, setNwsStationsState]",[761,782]]